---
- name: Wait for last batch to finish
  cisco.dnac.task_info:
    dnac_host: "{{ dnac_host }}"
    dnac_username: "{{ dnac_username }}"
    dnac_password: "{{ dnac_password }}"
    dnac_verify: "{{ dnac_verify | default(omit) }}"
    taskId: "{{ image_distribution_trigger.json.response.taskId }}"
  register: distribution_task_details
  until: >
         'Running = 0, Pending = 0' in distribution_task_details.dnac_response.response.progress or
         (distribution_task_details.dnac_response.response.failureReason is defined and
          'auto-aborted' in distribution_task_details.dnac_response.response.failureReason)
  delay: "{{ dnac_distribution_check_delay }}"
  retries: "{{ ((dnac_distribution_max_time_initial - 600) / dnac_distribution_check_delay) | int }}"

# - name: Get all Network Device Image Updates
#   cisco.dnac.network_device_image_updates_info:
#     dnac_host: "{{ dnac_host }}"
#     dnac_username: "{{ dnac_username }}"
#     dnac_password: "{{ dnac_password }}"
#     dnac_verify: "{{ dnac_verify | default(omit) }}"
#     hostName: "{{ device_list | map(attribute='hostname') }}"
#   register: image_distribution_status

# - name: Wait for image distribution to complete (batch {{ ansible_loop.index }})
#   cisco.dnac.network_device_images_info:
#     dnac_host: "{{ dnac_host }}"
#     dnac_username: "{{ dnac_username }}"
#     dnac_password: "{{ dnac_password }}"
#     dnac_verify: "{{ dnac_verify | default(omit) }}"
#     networkDeviceUpdateStatus: DISTRIBUTION_PENDING
#   register: image_distribution_status

# - debug:
#     var: image_distribution_status

# Add tasks to update reports
