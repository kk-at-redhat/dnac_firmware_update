---
- name: Get device info
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Build inventory
      ansible.builtin.include_tasks:
        file: dnac_inventory_build.yml

    - name: Pre-filter inventory
      ansible.builtin.include_tasks:
        file: dnac_inventory_prefilter.yml

    - name: Split inventory into batches
      ansible.builtin.include_tasks:
        file: dnac_inventory_batch.yml

    - name: Software distribution and activation
      when: not ansible_check_mode
      block:
        - name: Get custom image details
          when: dnac_image_overwrite | default('')
          ansible.builtin.include_tasks:
            file: dnac_image_get.yml

        - name: Software distribution steps
          when: not dnac_perform_activation | default(false)
          ansible.builtin.include_tasks:
            file: dnac_distribution_tasks.yml
          loop: "{{ ([dnac_inventory_batch1 | default([])] +
                     [dnac_inventory_batch2 | default([])] +
                     dnac_inventory_dynamic_batches) |
                    reject('equalto', []) }}"
          loop_control:
            loop_var: device_list
            extended: true
            label: "Batch: {{ ansible_loop.index }}"

        - name: Software activation steps
          when: dnac_perform_activation | default(false)
          ansible.builtin.include_tasks:
            file: dnac_activation_tasks.yml
          loop: "{{ ([dnac_inventory_batch1 | default([])] +
                     [dnac_inventory_batch2 | default([])] +
                     dnac_inventory_dynamic_batches) |
                    reject('equalto', []) }}"
          loop_control:
            loop_var: device_list
            extended: true
            label: "Batch: {{ ansible_loop.index }}"

        - name: Generate activation reports
          ansible.builtin.include_tasks:
            file: dnac_task_report.yml

        # Replace with tasks that push results to a SNow ticket
        - name: Output reports
          ansible.builtin.debug:
            msg: "{{ (lookup('ansible.builtin.file', item, errors='ignore') | default(' ', true)).splitlines() }}"
          loop:
            - /tmp/distribution_results.csv
            - /tmp/distribution_list_failed.txt
            - /tmp/distribution_list_success.txt
          loop_control:
            label: "{{ item }}"
