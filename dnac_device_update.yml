---
- name: Get device info
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Build inventory
      ansible.builtin.include_tasks:
        file: dnac_inventory_build.yml

    - name: Pre-filter inventory
      ansible.builtin.include_tasks:
        file: dnac_inventory_prefilter.yml

    - name: Split inventory into batches
      ansible.builtin.include_tasks:
        file: dnac_inventory_batch.yml

    - name: Software distribution steps
      when: not ansible_check_mode
      block:
        - name: Image related tasks
          ansible.builtin.include_tasks:
            file: dnac_distribution_image.yml

        - name: Distribute firmware
          ansible.builtin.include_tasks:
            file: dnac_distribution_tasks.yml
          loop: "{{ ([dnac_inventory_batch1 | default([])] +
                     [dnac_inventory_batch2 | default([])] +
                     dnac_inventory_dynamic_batches) |
                    reject('equalto', []) }}"
          loop_control:
            loop_var: device_list
            extended: true
            label: "Batch: {{ ansible_loop.index }}"

        - name: Generate distribution reports
          ansible.builtin.include_tasks:
            file: dnac_distribution_reporting.yml

    # Software activation tasks
    # - name: Activate firmware
    #   when: >
    #         not ansible_check_mode and
    #         dnac_perform_activation | default(false)
    #   ansible.builtin.include_tasks:
    #     file: dnac_activation.yml
    #   loop: "{{ ([dnac_inventory_batch1 | default([])] +
    #              [dnac_inventory_batch2 | default([])] +
    #              dnac_inventory_dynamic_batches) |
    #             reject('equalto', []) }}"
    #   loop_control:
    #     loop_var: device_list
    #     extended: true
    #     label: "Batch: {{ ansible_loop.index }}"

    # Replace with tasks that push result to a SNow ticket
    - name: Output reports
      when: not ansible_check_mode
      ansible.builtin.debug:
        msg: "{{ (lookup('ansible.builtin.file', item, errors='ignore') | default(' ', true)).splitlines() }}"
      loop:
        - /tmp/distribution_results.csv
        - /tmp/distribution_list_failed.txt
        - /tmp/distribution_list_success.txt
      loop_control:
        label: "{{ item }}"
