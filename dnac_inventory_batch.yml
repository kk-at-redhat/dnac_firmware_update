---
- name: Split inventory into batches
  when: dnac_rollout_strategy is defined
  block:
    - name: Build first inventory batch
      when: dnac_devices_to_update | length > dnac_rollout_strategy.batch1_size
      ansible.builtin.set_fact:
        dnac_inventory_batch1: "{{ dnac_devices_to_update[0 : dnac_rollout_strategy.batch1_size] }}"
        dnac_inventory_batch_marker: "{{ dnac_rollout_strategy.batch1_size }}"

    - name: Build second inventory batch
      when: dnac_devices_to_update | length > (dnac_rollout_strategy.batch1_size + dnac_rollout_strategy.batch2_size)
      ansible.builtin.set_fact:
        dnac_inventory_batch2: "{{ dnac_devices_to_update[dnac_inventory_batch_marker | int : dnac_rollout_strategy.batch1_size +
                                                                                              dnac_rollout_strategy.batch2_size] }}"
        dnac_inventory_batch_marker: "{{ dnac_inventory_batch_marker | int + dnac_rollout_strategy.batch2_size }}"

    - name: Build third inventory batch
      ansible.builtin.set_fact:
        dnac_inventory_dynamic_batches: "{{ dnac_devices_to_update[dnac_inventory_batch_marker | default(0) | int :] |
                                            batch(dnac_rollout_strategy.dynamic_batch_size) }}"

- name: Skip splitting inventory into batches
  when: dnac_rollout_strategy is not defined
  ansible.builtin.set_fact:
    dnac_inventory_dynamic_batches: "{{ dnac_devices_to_update | batch(10000) }}"

- name: Show inventory batches
  when: ansible_check_mode
  block:
    - name: Show first inventory batch
      ansible.builtin.debug:
        var: dnac_inventory_batch1 | map(attribute='hostname')

    - name: Show second inventory batch
      ansible.builtin.debug:
        var: dnac_inventory_batch2 | map(attribute='hostname')

    - name: Show remaining dynamic batches
      ansible.builtin.debug:
        msg: "{{ item | map(attribute='hostname') }}"
      loop: "{{ dnac_inventory_dynamic_batches | default([]) }}"
      loop_control:
        extended: true
        label: "Dynamic batch: {{ ansible_loop.index }}"
