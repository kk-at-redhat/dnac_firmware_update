---
- name: Reset activation payload - Batch {{ ansible_loop.index }}
  ansible.builtin.set_fact:
    dnac_image_activation_payload: []

- name: Build activation payload for custom image - Batch {{ ansible_loop.index }}
  when: dnac_image_overwrite | default('')
  ansible.builtin.set_fact:
    dnac_image_activation_payload: "{{ dnac_image_activation_payload | default([]) +
                                       [{'deviceUuid': item.id,
                                         'imageUuid': [image_details.dnac_response.response[0].imageUuid],
                                         'distributeIfNeeded': false,
                                         'activateLowerImageVersion': true}] }}"
  loop: "{{ device_list }}"
  loop_control:
    label: "Adding to payload: {{ item.hostname }}"

- name: Build activation payload for Golden image - Batch {{ ansible_loop.index }}
  when: not dnac_image_overwrite | default('')
  ansible.builtin.set_fact:
    dnac_image_activation_payload: "{{ dnac_image_activation_payload | default([]) +
                                       [{'deviceUuid': item.id,
                                         'distributeIfNeeded': false,
                                         'activateLowerImageVersion': true}] }}"
  loop: "{{ device_list }}"
  loop_control:
    label: "Adding to payload: {{ item.hostname }}"

- name: Authenticate to DNAC API
  ansible.builtin.include_tasks:
    file: dnac_auth.yml

- name: Trigger software image activation - Batch {{ ansible_loop.index }}
  ansible.builtin.uri:
    url: "https://{{ dnac_host }}/dna/intent/api/v1/image/activation/device"
    method: POST
    headers:
      X-Auth-Token: "{{ auth_response.json.Token }}"
      Content-Type: "application/json"
    body_format: json
    validate_certs: "{{ dnac_verify | default(omit) }}"
    body: "{{ dnac_image_activation_payload }}"
    status_code: 200, 201, 202, 204, 206
  register: image_activation_trigger

- debug:
    var: image_activation_trigger

- name: Save task ID for Batch {{ ansible_loop.index }}
  ansible.builtin.set_fact:
    dnac_activation_task_ids: "{{ dnac_activation_task_ids | default([]) + [image_activation_trigger.json.response.taskId] }}"

- name: Wait for activation task to finish - Batch {{ ansible_loop.index }}
  ansible.builtin.include_tasks:
    file: dnac_task_wait.yml
  vars:
    task_id: "{{ image_activation_trigger.json.response.taskId }}"
    max_wait_time: "{{ dnac_activation_max_time_initial if ansible_loop.index == 1 else dnac_activation_max_time }}"
    check_delay: "{{ dnac_activation_check_delay }}"
