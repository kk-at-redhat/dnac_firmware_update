---
- name: Mark unreachable devices as failed
  ansible.builtin.lineinfile:
    path: /tmp/distribution_list_failed.txt
    line: "{{ item.hostname }}"
    create: true
    mode: '666'
  loop: "{{ dnac_devices_to_update | rejectattr('reachabilityStatus', 'equalto', 'Reachable') }}"
  loop_control:
    label: "{{ item.hostname }}: {{ item.reachabilityStatus }}"

- name: Mark non-existing devices as failed
  ansible.builtin.lineinfile:
    path: /tmp/distribution_list_failed.txt
    line: "{{ item }}"
    create: true
    mode: '666'
  loop: "{{ dnac_hosts_to_update | default([]) | difference(dnac_devices_to_update | map(attribute='hostname')) }}"

- name: Add unreachable devices to the final csv report
  ansible.builtin.lineinfile:
    path: /tmp/distribution_results.csv
    line: "{{ item.hostname }},{{ item.managementIpAddress }},{{ item.platformId }},{{ item.serialNumber }},{{ item.softwareVersion }},,,,,Unreachable"
    create: true
    mode: '666'
  loop: "{{ dnac_devices_to_update | rejectattr('reachabilityStatus', 'equalto', 'Reachable') }}"
  loop_control:
    label: "{{ item.hostname }}: {{ item.reachabilityStatus }}"

- name: Add non-existing devices to the final csv report
  ansible.builtin.lineinfile:
    path: /tmp/distribution_results.csv
    line: "{{ item }},,,,,,,,,Doesn't exist"
    create: true
    mode: '666'
  loop: "{{ dnac_hosts_to_update | default([]) | difference(dnac_devices_to_update | map(attribute='hostname')) }}"

- name: Remove unreachable devices from the inventory
  ansible.builtin.set_fact:
    dnac_devices_to_update: "{{ dnac_devices_to_update | selectattr('reachabilityStatus', 'equalto', 'Reachable') }}"

- name: Stop if inventory is empty
  when: not dnac_devices_to_update
  ansible.builtin.meta: end_play
